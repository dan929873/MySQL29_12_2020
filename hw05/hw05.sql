-- 1 ѕусть в таблице users пол€ created_at и updated_at оказались незаполненными. «аполните их текущими датой и временем.

ALTER TABLE users ADD created_at VARCHAR DEFAULT "20.10.2017 8:10";
ALTER TABLE users ADD updated_at VARCHAR DEFAULT "20.10.2017 8:10";

-- 2 “аблица users была неудачно спроектирована. «аписи created_at и updated_at были заданы типом VARCHAR и в них долгое врем€ помещались значени€ в формате "20.10.2017 8:10". 
-- Ќеобходимо преобразовать пол€ к типу DATETIME, сохранив введеные ранее значени€.

ALTER TABLE users ADD created_at_dt DATETIME, updated_at_dt DATETIME;
UPDATE users
SET created_at_dt = STR_TO_DATE(created_at, '%d.%m.%Y %h:%i'),
    updated_at_dt = STR_TO_DATE(updated_at, '%d.%m.%Y %h:%i');
ALTER TABLE users DROP created_at, DROP updated_at, 
ALTER TABLE users RENAME COLUMN created_at_dt TO created_at;
ALTER TABLE users RENAME COLUMN updated_at_dt TO updated_at;

-- 3 ¬ таблице складских запасов storehouses_products в поле value могут встречатьс€ самые разные цифры: 0, если товар закончилс€ и выше нул€, если на складе имеютс€ запасы. 
-- Ќеобходимо отсортировать записи таким образом, чтобы они выводились в пор€дке увеличени€ значени€ value. ќднако, нулевые запасы должны выводитьс€ в конце, после всех записей.

USE shop;
INSERT INTO `storehouses_products` VALUES ('1','1','1','9','2004-07-01 12:04:26','1995-07-15 05:02:48'),
('2','2','2','8','1975-10-01 21:28:55','1972-12-03 18:06:49'),
('3','3','3','3','1978-03-29 06:30:21','1990-03-09 15:35:36'),
('4','4','4','7','1981-12-12 06:21:49','1977-05-13 07:36:54'),
('5','5','5','0','1993-07-09 08:46:32','2004-01-01 10:26:12'),
('6','6','6','5','2015-06-27 10:08:00','1976-05-25 03:22:11'),
('7','7','7','3','1980-07-24 13:49:19','1981-03-25 14:47:09'),
('8','8','8','2','1987-02-01 07:43:33','1991-02-18 02:10:25'),
('9','9','9','0','2014-11-09 10:52:36','2011-05-02 17:12:33'),
('10','10','10','9','2020-02-02 18:00:53','1991-02-16 20:23:56'),
('11','11','11','8','1987-06-15 12:58:49','2009-12-08 03:50:27'),
('12','12','12','0','1998-08-01 02:54:20','2020-11-06 20:28:14'),
('13','13','13','3','2003-03-05 12:51:37','1992-06-20 17:58:45'),
('14','14','14','5','2019-12-06 06:38:39','1973-09-06 08:22:41'),
('15','15','15','8','1993-02-05 02:03:00','2009-12-11 14:41:34'),
('16','16','16','6','1999-09-02 16:53:20','2005-05-06 04:01:55'),
('17','17','17','9','1998-02-13 10:41:50','2011-11-02 08:23:27'),
('18','18','18','7','1994-06-07 04:38:05','1991-09-16 03:47:22'),
('19','19','19','7','1986-11-19 07:42:34','1996-02-09 05:25:33'),
('20','20','20','6','1980-11-23 21:16:17','1970-11-17 18:22:00'),
('21','21','21','9','1975-08-03 22:40:25','1975-02-10 12:12:08'),
('22','22','22','7','2015-02-02 03:46:23','2016-02-22 21:26:21'),
('23','23','23','6','1973-05-23 03:05:52','1985-08-06 12:10:06'),
('24','24','24','5','2016-08-24 05:06:36','2001-03-28 10:26:36'),
('25','25','25','9','2012-12-27 07:42:40','1977-08-24 06:30:33'),
('26','26','26','9','1988-05-18 09:34:28','1993-09-29 00:22:22'),
('27','27','27','3','2019-08-31 12:24:07','2004-07-22 16:49:17'),
('28','28','28','4','2015-06-22 03:14:50','2019-06-16 16:03:06'),
('29','29','29','1','2005-05-27 02:55:40','1977-10-03 12:27:37'),
('30','30','30','5','1991-08-01 09:39:03','2010-08-13 05:57:54'),
('31','31','31','9','2012-10-01 13:11:46','2020-04-11 09:31:53'),
('32','32','32','9','1979-08-28 19:52:11','1984-07-17 13:36:36'),
('33','33','33','5','1991-02-25 10:10:24','2008-08-18 20:45:29'); 

SELECT * FROM storehouses_products ORDER BY CASE WHEN value = 0 THEN 2147483647 ELSE value END

-- ѕрактическое задание теме Ујгрегаци€ данныхФ
-- 1 ѕодсчитайте средний возраст пользователей в таблице users

use vk;
select AVG (TIMESTAMPDIFF(year, birthday, now())) as 'средний возраст' from profiles; 

-- 2 ѕодсчитайте количество дней рождени€, которые приход€тс€ на каждый из дней недели. —ледует учесть, что необходимы дни недели текущего года, а не года рождени€.

select date_format(date(concat_ws('-', year(now()),month (birthday), day(birthday))), '%W') as 'день_недели', 
	count(*) as 'количество' 
	from profiles 
	group by день_недели 
	order by количество desc;




